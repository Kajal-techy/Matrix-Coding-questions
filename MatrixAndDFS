// https://leetcode.com/problems/count-unguarded-cells-in-the-grid/


class Solution {
    public int countUnguarded(int m, int n, int[][] guards, int[][] walls) {
        
        char inputMat[][] = new char[m][n];
        
        // Set Guards in the mat
        for(int i = 0; i < guards.length; i++) { 
            inputMat[guards[i][0]][guards[i][1]] = 'G';    
        }
        
        // Set walls in the matrix
        // Set Guards in the mat
        for(int i = 0; i < walls.length; i++) {
            inputMat[walls[i][0]][walls[i][1]] = 'W';      
        }
                
        // apply dfs
        for(int i = 0; i < m; i++) {
            for(int j = 0; j < n; j++) {
               dfs(inputMat, i, j); 
            }
        }
        
        int count = 0;
        
        for(int i = 0; i < m; i++) {
            for(int j = 0; j < n; j++) {
               if(inputMat[i][j] == ' ') {
                   count++;
               } 
            }
        }
        
        return count;
        
    }
    
    private void dfs(char inputMat[][], int i, int j) {
        
        if(inputMat[i][j] == 'V' || i < 0 || j < 0 || i >= inputMat.length ||          j >= inputMat[0].length || inputMat[i][j] == 'W') {
            return;
        }
        
        if(inputMat[i][j] == 'G') {
            dfs(inputMat, i+1, j);
            dfs(inputMat, i-1, j);
            dfs(inputMat, i, j+1);
            dfs(inputMat, i, j-1);      
        }
        
        inputMat[i][j] = 'V';      
    }

}
