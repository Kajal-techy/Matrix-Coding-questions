// https://leetcode.com/problems/k-divisible-elements-subarrays/submissions/
class Solution {
    public int countDistinct(int[] nums, int k, int p) {
      
        // We will use set here
        Set<String> set = new HashSet<>();
        
        for(int i = 0; i < nums.length; i++) {
            
            int count = 0;
            StringBuilder sb = new StringBuilder();
            
            for(int j = i ; j < nums.length; j++) {
                
                sb.append(nums[j] + " ");
                
                if(nums[j]%p == 0) {
                    count++;
                }
                
                if(count > k) {
                    break;
                }
                
                set.add(sb.toString());

            }
            
        }
        
        return set.size();
    }
}
